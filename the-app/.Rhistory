results=themat %*% coeffmat))
}
make.matrix.result(langnorm$language, as.matrix(langnorm[, 3:6]), c(1, 2, 1, 1))
make.matrix.result <- function(thelabels, themat, coeffs){
coeffmat <- matrix(coeffs, ncol=1)
res <- themat %*% coeffmat
return(data.table(thelabel=thelabels,
results=res))
}
make.matrix.result(langnorm$language, as.matrix(langnorm[, 3:6]), c(1, 2, 1, 1))
runApp()
runApp()
runApp()
shiny::runApp('Dropbox/NYPL/our-dashboard/the-app')
runApp('Dropbox/NYPL/our-dashboard/the-app')
langnorm <- fread("./data/langnorm.dat", sep="\t", header=TRUE)
library(shiny)
library(shinydashboard)
library(magrittr)
library(data.table)
library(ggplot2)
library(stringr)
options(warn=1)
options(scipen=20)
langinfo <- fread("./data/langinfo.dat", sep="\t", header=TRUE)
langnorm <- fread("./data/langnorm.dat", sep="\t", header=TRUE)
setwd()
getwd()
setwd("~/Desktop/NYPL/our-dashboard/the-app/")
langinfo <- fread("./data/langinfo.dat", sep="\t", header=TRUE)
langnorm <- fread("./data/langnorm.dat", sep="\t", header=TRUE)
langnorm
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?bar
?barplot
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
##------ [/Users/tonyfischetti/Dropbox/NYPL/our-dashboard] Thu Jun 27 13:12:41 2019 ------##
q()
##------ [/Users/tonyfischetti/Dropbox/NYPL/our-dashboard/making-the-data/make-it-all] Thu Jun 27 13:14:12 2019 ------##
rm(list=ls())
options(echo=TRUE)
options(datatable.prettyprint.char=50)
options(width = 80)
args <- commandArgs(trailingOnly=TRUE)
library(colorout)
library(data.table)
library(magrittr)
library(stringr)
library(BBmisc)
source("~/.R/tony-utils.R")
dat <- readRDS("../enrich/enriched-research-joined.datatable")
dat[!is.na(pub_year) & pub_year > 2019, pub_year:=NA]
dat[!is.na(pub_year) & pub_year < 1000, .(pub_year)]
dat[!is.na(pub_year) & pub_year < 170, pub_year:=NA]
dat[!is.na(pub_year) & pub_year==999, pub_year:=NA]
dat[!is.na(pub_year) & pub_year < 1000 & pub_year > 201, pub_year:=NA]
dat[!is.na(pub_year) & pub_year < 1000, pub_year:=as.integer(10*pub_year)]
dat
dat %>% saveRDS("./enriched-fixed.datatable")
dat[, .N]
build.a.count <- data.table(dacat="",
dakey="",
davalue=as.numeric(NA),
dadesc="")
build.row <- function(acat, akey, aval, adesc){
data.table(dacat=acat, dakey=akey, davalue=aval, dadesc=adesc)
}
add.to.build.a.count <- function(acat, akey, aval, adesc){
tmp <- build.row(acat, akey, aval, adesc)
build.a.count <<- rbind(build.a.count, tmp)
}
add.to.build.a.count("gen_info", "num_uniq_bibs_and_items",
uniqueN(dat[, .(bibid, itemid)]),
"Number of unique bibid and itemid pairs")
add.to.build.a.count("gen_info", "num_uniq_bibs",
uniqueN(dat[, .(bibid)]),
"Number of unique bibs")
add.to.build.a.count("gen_info", "num_uniq_items",
uniqueN(dat[, .(itemid)]),
"Number of unique items")
add.to.build.a.count("gen_info", "grand_total_circ",
dat[, sum(total_circ, na.rm=TRUE)],
"Grand total circulation")
add.to.build.a.count("gen_info", "perc_circed_once",
dat[total_circ>0, .N]/dat[,.N],
"Percent of collection that circed at least once")
build.a.count
dat
dat %>% names
add.to.build.a.count("gen_info", "fy17circ",
dat[, sum(fy17_checkouts, na.rm=TRUE)],
"Total check-outs in FY17")
add.to.build.a.count("gen_info", "fy18circ",
dat[, sum(fy18_checkouts, na.rm=TRUE)],
"Total check-outs in FY18")
build.a.count
build.a.count
build.a.count <- data.table(dacat="",
dakey="",
davalue="",
dadesc="")
build.row <- function(acat, akey, aval, adesc){
data.table(dacat=acat, dakey=akey, davalue=aval, dadesc=adesc)
}
add.to.build.a.count <- function(acat, akey, aval, adesc){
tmp <- build.row(acat, akey, aval, adesc)
build.a.count <<- rbind(build.a.count, tmp)
}
add.to.build.a.count("gen_info", "num_uniq_bibs_and_items",
sprintf("%d", uniqueN(dat[, .(bibid, itemid)])),
"Number of unique bibid and itemid pairs")
add.to.build.a.count("gen_info", "num_uniq_bibs",
sprintf("%d", uniqueN(dat[, .(bibid)])),
"Number of unique bibs")
add.to.build.a.count("gen_info", "num_uniq_items",
sprintf("%d", uniqueN(dat[, .(itemid)])),
"Number of unique items")
build.a.count
add.to.build.a.count("gen_info", "grand_total_circ",
sprintf("%d", dat[, sum(total_circ, na.rm=TRUE)]),
"Grand total circulation")
add.to.build.a.count("gen_info", "perc_circed_once",
sprintf("%.2f", 100*dat[total_circ>0, .N]/dat[,.N]),
"Percent of collection that circed at least once")
add.to.build.a.count("gen_info", "fy17circ",
sprintf("%d", dat[, sum(fy17_checkouts, na.rm=TRUE)]),
"Total check-outs in FY17")
add.to.build.a.count("gen_info", "fy18circ",
sprintf("%d", dat[, sum(fy18_checkouts, na.rm=TRUE)]),
"Total check-outs in FY18")
build.a.count
add.to.build.a.count("gen_info", "perc_circed_once",
sprintf("%.2f%%", 100*dat[total_circ>0, .N]/dat[,.N]),
"Percent of collection that circed at least once")
build.a.count
build.a.count <- data.table(dacat="",
dakey="",
davalue="",
dadesc="")
build.row <- function(acat, akey, aval, adesc){
data.table(dacat=acat, dakey=akey, davalue=aval, dadesc=adesc)
}
add.to.build.a.count <- function(acat, akey, aval, adesc){
tmp <- build.row(acat, akey, aval, adesc)
build.a.count <<- rbind(build.a.count, tmp)
}
add.to.build.a.count("gen_info", "num_uniq_bibs_and_items",
sprintf("%d", uniqueN(dat[, .(bibid, itemid)])),
"Number of unique bibid and itemid pairs")
add.to.build.a.count("gen_info", "num_uniq_bibs",
sprintf("%d", uniqueN(dat[, .(bibid)])),
"Number of unique bibs")
add.to.build.a.count("gen_info", "num_uniq_items",
sprintf("%d", uniqueN(dat[, .(itemid)])),
"Number of unique items")
add.to.build.a.count("gen_info", "grand_total_circ",
sprintf("%d", dat[, sum(total_circ, na.rm=TRUE)]),
"Grand total circulation")
add.to.build.a.count("gen_info", "perc_circed_once",
sprintf("%.2f%%", 100*dat[total_circ>0, .N]/dat[,.N]),
"Percent of collection that circed at least once")
add.to.build.a.count("gen_info", "fy17circ",
sprintf("%d", dat[, sum(fy17_checkouts, na.rm=TRUE)]),
"Total check-outs in FY17")
add.to.build.a.count("gen_info", "fy18circ",
sprintf("%d", dat[, sum(fy18_checkouts, na.rm=TRUE)]),
"Total check-outs in FY18")
build.a.count
build.a.count %>% fwrite("./gen-info.dat", sep="\t")
q()
shiny::runApp('Dropbox/NYPL/our-dashboard/the-app')
deployApp()
library(shiny)
library(shinydashboard)
deployApp()
setwd("~/Desktop/NYPL/our-dashboard/the-app/")
shiny::runApp()
library(shiny)
library(shinydashboard)
library(data.table)
library(stringr)
getwd()
setwd("~/Desktop/NYPL/our-dashboard/the-app/data/")
runApp('~/Dropbox/NYPL/our-dashboard/the-app')
?dataTableOutput
runApp('~/Dropbox/NYPL/our-dashboard/the-app')
library(DT)
library(DT)
install.packages("DT")
library(DT)
runApp('~/Dropbox/NYPL/our-dashboard/the-app')
langi
geninfo <- fread("./data/gen-info.dat", sep="\t", header=TRUE)
langinfo <- fread("./data/langinfo.dat", sep="\t", header=TRUE)
langnorm <- fread("./data/langnorm.dat", sep="\t", header=TRUE)
getwd()
setwd("../")
geninfo <- fread("./data/gen-info.dat", sep="\t", header=TRUE)
langinfo <- fread("./data/langinfo.dat", sep="\t", header=TRUE)
langnorm <- fread("./data/langnorm.dat", sep="\t", header=TRUE)
locationinfo <- fread("./data/centerinfo.dat", sep="\t", header=TRUE)
mattypeinfo <- fread("./data/xmattype.dat", sep="\t", header=TRUE)
biblevelinfo <- fread("./data/xbiblevel.dat", sep="\t", header=TRUE)
countriesinfo  <- fread("./data/countryinfo.dat", sep="\t", header=TRUE)
locationinfo <- fread("./data/centerinfo.dat", sep="\t", header=TRUE)
lc1info <- fread("./data/lc1-info.dat", sep="\t", header=TRUE)
lc1info[, short_desc:=ifelse(str_length(lc1info[, description])>20,
sprintf("(%s) %s...",
lc1info[, first_letter],
str_sub(lc1info[, description], 1, 17)),
sprintf("(%s) %s",
lc1info[, first_letter],
lc1info[, description]))]
lc1norm <- fread("./data/lc1norm.dat", sep="\t", header=TRUE)
lc1norm[, short_desc:=ifelse(str_length(lc1norm[, description])>20,
sprintf("(%s) %s...",
lc1norm[, first_letter],
str_sub(lc1norm[, description], 1, 17)),
sprintf("(%s) %s",
lc1norm[, first_letter],
lc1norm[, description]))]
lc2info <- fread("./data/lc2-info.dat", sep="\t", header=TRUE)
lc2norm <- fread("./data/lc2norm.dat", sep="\t", header=TRUE)
langinfo
runApp()
langinfo
?setnames
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
langinfo
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
q()
install.packages("DT")
shiny::runApp()
setwd()
getwd()
setwd("~/Dropbox/NYPL/our-dashboard/the-app/")
paulcenterinfo <- fread("./data/paul-by-center-circ.csv", sep=",", header=TRUE)
library(shiny)
library(shinydashboard)
library(data.table)
library(stringr)
library(DT)
paulcenterinfo <- fread("./data/paul-by-center-circ.csv", sep=",", header=TRUE)
paulcenterinfo
setorder(paulcenterinfo, FY, quarter)
ppaulcenterinfo
paulcenterinfo
paultotals <- fread("./data/paul-totals.dat", sep="\t", header=TRUE)
paultotals
visitinfo <- fread("./data/visits-by-quarter.dat", sep="\t", header=TRUE)
visitinfo
geninfo <- fread("./data/gen-info.dat", sep="\t", header=TRUE)
langinfo <- fread("./data/langinfo.dat", sep="\t", header=TRUE)
langnorm <- fread("./data/langnorm.dat", sep="\t", header=TRUE)
locationinfo <- fread("./data/centerinfo.dat", sep="\t", header=TRUE)
mattypeinfo <- fread("./data/xmattype.dat", sep="\t", header=TRUE)
biblevelinfo <- fread("./data/xbiblevel.dat", sep="\t", header=TRUE)
countriesinfo  <- fread("./data/countryinfo.dat", sep="\t", header=TRUE)
locationinfo <- fread("./data/centerinfo.dat", sep="\t", header=TRUE)
lc1info <- fread("./data/lc1-info.dat", sep="\t", header=TRUE)
lc1info[, short_desc:=ifelse(str_length(lc1info[, description])>20,
sprintf("(%s) %s...",
lc1info[, first_letter],
str_sub(lc1info[, description], 1, 17)),
sprintf("(%s) %s",
lc1info[, first_letter],
lc1info[, description]))]
lc1norm <- fread("./data/lc1norm.dat", sep="\t", header=TRUE)
lc1norm[, short_desc:=ifelse(str_length(lc1norm[, description])>20,
sprintf("(%s) %s...",
lc1norm[, first_letter],
str_sub(lc1norm[, description], 1, 17)),
sprintf("(%s) %s",
lc1norm[, first_letter],
lc1norm[, description]))]
lc2info <- fread("./data/lc2-info.dat", sep="\t", header=TRUE)
lc2norm <- fread("./data/lc2norm.dat", sep="\t", header=TRUE)
add.perc.to.names <- function(twocoldt){
tmp <- as.vector(unlist(100 * (twocoldt[, 2] / sum(twocoldt[, 2]))))
formernames <- as.vector(unlist(twocoldt[,1]))
newnames <- sprintf("%s (%.1f%%)", formernames, tmp)
twocoldt[[1]] <- newnames
return(twocoldt)
}
compress <- function(twocoldt, n){
# HAS TO BE SORTED!!!
one <- twocoldt[1:(n-1),]
twocoldt[n, 1] <- "Other"
twocoldt[n, 2] <- sum(twocoldt[n:.N, 2])
almost <- rbind(one, twocoldt[n,])
return(add.perc.to.names(almost))
}
make.matrix.result <- function(thelabels, themat, coeffs){
coeffmat <- matrix(coeffs, ncol=1)
res <- themat %*% coeffmat
return(data.table(thelabel=thelabels,
results=res))
}
paultotals
paultotals[, sum(totals), fy]
runApp()
paulyeartotals <- paultotals[, sum(totals), fy]
paulyeartotals
paulyeartotals[fy=2018]
paulyeartotals[fy==2018]
paulyeartotals[fy==2018, V1]
runApp()
paulyeartotals
paultotals
runApp()
getwd()
setwd(""/Users/tonyfischetti/Dropbox/NYPL/our-dashboard/the-app"")
setwd("/Users/tonyfischetti/Dropbox/NYPL/our-dashboard/the-app")
shiny::runApp()
setwd("/Users/tonyfischetti/Dropbox/NYPL/our-dashboard/the-app")
shiny::runApp()
shiny::runApp('Dropbox/NYPL/our-dashboard/the-app')
shiny::runApp()
getwd()
setwd("~/Dropbox/NYPL/our-dashboard/the-app/")
shiny::runApp()
shiny::runApp()
setwd("~/Dropbox/NYPL/our-dashboard/the-app/")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
paulcenterinfo <- fread("./data/paul-by-center-circ.csv", sep=",", header=TRUE)
setorder(paulcenterinfo, FY, quarter)
paultotals <- fread("./data/paul-totals.dat", sep="\t", header=TRUE)
paulyeartotals <- paultotals[, sum(totals), fy]
visitinfo <- fread("./data/visits-by-quarter.dat", sep="\t", header=TRUE)
geninfo <- fread("./data/gen-info.dat", sep="\t", header=TRUE)
langinfo <- fread("./data/langinfo.dat", sep="\t", header=TRUE)
langnorm <- fread("./data/langnorm.dat", sep="\t", header=TRUE)
locationinfo <- fread("./data/centerinfo.dat", sep="\t", header=TRUE)
mattypeinfo <- fread("./data/xmattype.dat", sep="\t", header=TRUE)
biblevelinfo <- fread("./data/xbiblevel.dat", sep="\t", header=TRUE)
countriesinfo  <- fread("./data/countryinfo.dat", sep="\t", header=TRUE)
locationinfo <- fread("./data/centerinfo.dat", sep="\t", header=TRUE)
lc1info <- fread("./data/lc1-info.dat", sep="\t", header=TRUE)
lc1info[, short_desc:=ifelse(str_length(lc1info[, description])>20,
sprintf("(%s) %s...",
lc1info[, first_letter],
str_sub(lc1info[, description], 1, 17)),
sprintf("(%s) %s",
lc1info[, first_letter],
lc1info[, description]))]
lc1norm <- fread("./data/lc1norm.dat", sep="\t", header=TRUE)
lc1norm[, short_desc:=ifelse(str_length(lc1norm[, description])>20,
sprintf("(%s) %s...",
lc1norm[, first_letter],
str_sub(lc1norm[, description], 1, 17)),
sprintf("(%s) %s",
lc1norm[, first_letter],
lc1norm[, description]))]
lc2info <- fread("./data/lc2-info.dat", sep="\t", header=TRUE)
lc2norm <- fread("./data/lc2norm.dat", sep="\t", header=TRUE)
paultotals
??matplot
?matplot
paulcenterinfo
visits
visitinfo
runApp()
runApp()
runApp()
visitinfo
runApp()
runApp()
paultotals
paulcenterinfo
?starts
?startsWith
paulcenterinfo[, .SD, .SDcols=names(paulcenterinfo) %like% "^sasb"]
paulcenterinfo[, .(fy, quarter, .SD), .SDcols=names(paulcenterinfo) %like% "^sasb"]
paulcenterinfo[, .(FY, quarter, .SD), .SDcols=names(paulcenterinfo) %like% "^sasb"]
paulcenterinfo[, .SD, .SDcols=names(paulcenterinfo) %like% "^sasb|fy|quarter"]
paulcenterinfo[, .SD, .SDcols=names(paulcenterinfo) %like% "^sasb|FY|quarter"]
paulcenterinfo[, .SD, .SDcols=names(paulcenterinfo) %like% "^lpa|FY|quarter"]
paulcenterinfo <- fread("./data/paul-by-center-circ.csv", sep=",", header=TRUE)
setorder(paulcenterinfo, FY, quarter)
paulcenterinfo
paulcenterinfo[, sprintf("FY%s-Q%d", str_sub(as.character(FY), 2, 4), quarter)]
paulcenterinfo[, sprintf("FY%s-Q%d", str_sub(as.character(FY), 3, 4), quarter)]
paulcenterinfo[, period:=paulcenterinfo[, sprintf("FY%s-Q%d", str_sub(as.character(FY), 3, 4), quarter)]]
paulcenterinfo
paulcenterinfo[, .SD, .SDcols=names(paulcenterinfo) %like% "^lpa|period"]
paulcenterinfo[, .SD, .SDcols=names(paulcenterinfo) %like% "^LPA|period"]
?matplot
library(ggplot2)
tmp <- paulcenterinfo[, .SD, .SDcols=names(paulcenterinfo) %like% "^SASB|period"]
melt(tmp, id.vars="period")
ggplot(tmp, aes(x="period", y="value", group=variable, fill=variable)) +
geom_line()
tmp <- paulcenterinfo[, .SD, .SDcols=names(paulcenterinfo) %like% "^SASB|period"]
tmp <- melt(tmp, id.vars="period")
ggplot(tmp, aes(x="period", y="value", group=variable, fill=variable)) +
geom_line()
ggplot(tmp, aes(x=period, y=value, group=variable, fill=variable)) +
geom_line()
tmp <- tmp[!is.na(value)]
ggplot(tmp, aes(x=period, y=value, group=variable, fill=variable)) +
geom_line()
ggplot(tmp, aes(x=period, y=value, group=variable, fill=variable)) +
geom_line(aes(group=variable, fill=variable))
ggplot(tmp, aes(x=period, y=value, group=variable, fill=variable)) +
geom_line(aes(group=variable))
ggplot(tmp, aes(x=period, y=value, group=variable, fill=variable)) +
ggplot(tmp, aes(x=period, y=value, group=variable, fill=variable)) +
geom_line(aes(x=period, y=value, group=variable))
ggplot(tmp, aes(x=period, y=value, group=variable, fill=variable, color=varaible)) +
geom_line()
ggplot(tmp, aes(x=period, y=value, group=variable, fill=variable, color=varible)) +
geom_line()
ggplot(tmp, aes(x=period, y=value, group=variable, fill=variable, color=variable)) +
geom_line()
tmp <- paulcenterinfo[, .SD, .SDcols=names(paulcenterinfo) %like% sprint("^%s|period", "SASB")]
tmp <- paulcenterinfo[, .SD, .SDcols=names(paulcenterinfo) %like% sprintf("^%s|period", "SASB")]
tmp
theone <- "SASB"
tmp <- paulcenterinfo[, .SD, .SDcols=names(paulcenterinfo) %like% sprintf("^%s|period", theone)]
tmp <- melt(tmp, id.vars="period")
tmp <- tmp[!is.na(value)]
tmp
tmp[, metric:=str_replace_all(str_replace(variable, sprintf("%s_", theone), ""), "_", " ")]
tmp
ggplot(tmp, aes(x=period, y=value, group=metric, fill=metric, color=metric)) +
geom_line()
ggplot(tmp, aes(x=period, y=value, group=metric, fill=metric, color=metric)) +
geom_line() +
ggtitle(sprintf("%s circulation and materials consulted"))
ggplot(tmp, aes(x=period, y=value, group=metric, fill=metric, color=metric)) +
geom_line() +
ggtitle(sprintf("%s circulation and materials consulted", theone))
theone <- "LPA"
tmp <- paulcenterinfo[, .SD, .SDcols=names(paulcenterinfo) %like% sprintf("^%s|period", theone)]
tmp <- melt(tmp, id.vars="period")
tmp <- tmp[!is.na(value)]
tmp[, metric:=str_replace_all(str_replace(variable, sprintf("%s_", theone), ""), "_", " ")]
ggplot(tmp, aes(x=period, y=value, group=metric, fill=metric, color=metric)) +
geom_line() +
ggtitle(sprintf("%s circulation and materials consulted", theone))
theone <- "Schomburg"
tmp <- paulcenterinfo[, .SD, .SDcols=names(paulcenterinfo) %like% sprintf("^%s|period", theone)]
tmp <- melt(tmp, id.vars="period")
tmp <- tmp[!is.na(value)]
tmp[, metric:=str_replace_all(str_replace(variable, sprintf("%s_", theone), ""), "_", " ")]
ggplot(tmp, aes(x=period, y=value, group=metric, fill=metric, color=metric)) +
geom_line() +
ggtitle(sprintf("%s circulation and materials consulted", theone))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
?dropdownMenu
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
